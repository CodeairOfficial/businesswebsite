@use 'src/assets/css/partials/index' as *;

.hero {
  position: sticky;
  // "Pulls up" the entire section except for the page menu, effectively making it look like just the page menu is sticky
  top: var(--negative-offset, -1000px);
  z-index: 10;
  overflow: hidden;
  width: 100%;
  padding-top: $gaps-gap-4;
  border-bottom: 1px solid black;
  margin-bottom: $gaps-gap-10;
  background-repeat: no-repeat;
  background-position: center right;
  background-color: var(--theme-gradient-background-color, #{$colors-monochrome-1});
  background-image: var(--theme-logo), var(--theme-gradient);

  // Strip is always present on mobile (but not on desktop) - we have to account for that:
  &.scrolled {
    @media (max-width: $breakpoints-lg) {
      top: calc(var(--negative-offset) + var(--strip-height));
    }
  }

  &.custom-background {
    border-bottom: none;

    .page-category {
      // Might be problematic depending on image colors
      color: white;
      // display: inline-block;
      // background-color: rgba($colors-monochrome-10, 0.2);
    }

    .title-block {
      opacity: 0;
    }
  }

  &.has-scenes {
    .title-block {
      min-height: auto;
      padding-bottom: 0px;

      @media (max-width: $breakpoints-lg) {
        padding-bottom: $gaps-gap-4;
      }
    }
  }

  .backdrop {
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    width: 100%;
    height: 100%;

    > img {
      position: absolute;
      right: 0px;
      bottom: -50px;

      @media (max-width: $breakpoints-lg) {
        max-width: 50%;
        height: 100%;
        bottom: 0px;
      }
    }
  }
}

.info {
  @include layout-content;

  .title-block {
    padding-top: $gaps-gap-16;
    min-height: 290px;
    padding-bottom: $gaps-gap-12;

    h1 {
      position: relative;
      display: block;

      @media (max-width: $breakpoints-lg) {
        font-size: 6rem;
      }

      &.subtext {
        color: $colors-monochrome-1;
      }

      > span {
        position: absolute;
        top: 0px;
        left: 0px;
        font-size: 0.3em;
        color: $colors-main;
        letter-spacing: 0.3em;
      }
    }

    .description {
      color: #707070;
      font-size: $sizes-size-12;
    }

    .buttons {
      margin-top: $gaps-gap-5;

      > a {
        margin-right: $gaps-gap-3;

        > svg {
          @include fonts-xs;
        }

        > span {
          margin-left: $gaps-gap-2;
        }
      }
    }
  }

  .page-navigation {
    position: relative;
    top: var(--header-height);
    width: 100%;
    display: flex;
    padding-top: $gaps-gap-4;
    padding-bottom: $gaps-gap-4;

    > * {
      margin-left: $gaps-gap-6;

      &:first-child {
        margin-left: 0px;
      }
    }
  }
}

.scenes {
  margin-bottom: $gaps-gap-4;
  width: 100%;
  display: grid;
  grid-template-columns: repeat(3, 1fr);

  @media (max-width: $breakpoints-lg) {
    .controls {
      grid-column: 1 / 3;
      grid-row: 2 / 2;
      justify-content: flex-start;
      align-items: flex-start;
    }
  }

  .scene {
    grid-column: 1 / 2;
    grid-row: 1 / 1;
    opacity: 0;
    transform: translateX(-100px);
    transition: all 0.5s;

    @media (max-width: $breakpoints-lg) {
      grid-column: 1 / 4;
    }

    &.active {
      top: 0px;
      transform: translateY(0px);
      opacity: 1;
    }
  }

  .controls {
    display: flex;
    justify-content: flex-end;
    align-items: flex-end;
    z-index: 1;

    @media (max-width: $breakpoints-lg) {
      grid-column: 1 / 4;
      grid-row: 2 / 2;
      justify-content: space-between;
      align-items: flex-start;
    }

    .watch-now {
      height: 48px;
      margin-right: $gaps-gap-3;

      > span {
        text-transform: uppercase;
        margin-right: $gaps-gap-2;
      }

      > svg {
        position: relative;
        top: -1px;
      }
    }

    .arrows {
    }
  }

  .controls-dots {
    display: flex;
    justify-content: center;
    align-items: flex-end;

    @media (max-width: $breakpoints-lg) {
      display: none;
    }

    .dot {
      padding: 6px;
      display: flex;
      justify-content: center;

      &:hover {
        cursor: pointer;
      }

      &.active {
        .circle {
          background-color: $colors-state-error;
        }
      }

      .circle {
        height: 8px;
        width: 8px;
        border-radius: 8px;
        background-color: $colors-monochrome-7;
      }
    }
  }
}

.scene-background-image {
  position: absolute;
  right: 0px;
  top: 0px;
  bottom: 0px;
  width: 41%;
  z-index: -1;
  display: grid;

  @media (max-width: $breakpoints-lg) {
    display: none;
  }

  opacity: 0;
  transform: translateX(100px);
  transition: all 0.5s;

  &.active {
    transform: translateX(0px);
    opacity: 1;
  }

  > * {
    img {
      mask-image: linear-gradient(to left, rgba(0, 0, 0, 1) 35%, rgba(255, 255, 255, 0));
    }

    grid-area: 1 / 1;
  }
}
