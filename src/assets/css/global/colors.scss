@use 'src/assets/css/partials/index' as *;

:root {
  --color-icon: inherit; // Since icons don't respond to the color attribute, they can use this variable to retrieve and apply the color context
  --color-text: $colors-main;
}

// Invert colors
.dark-mode {
  --color-text: $colors-main-light !important;
}

// Label/button colors
.white {
  @include colors-white;

  &.ghost {
    @include colors-white-ghost;
  }

  // &:hover {
  //   @include c
  //   background: #f2f2f2;

  //   // For use by Button component (animates colors when hovering)
  //   --button-color-background: #{$colors-main};
  //   --button-color-background-hover: #{darken($colors-main, 15%)};
  // }

  // &.ghost {
  //   background: none;
  //   color: $colors-monochrome-1;
  //   --color-icon: #{$colors-monochrome-1};
  //   border-color: $colors-monochrome-1;
  // }

  // &.inverted {
  //   background: $colors-main;
  //   --color-icon: #{$colors-monochrome-1};
  //   color: $colors-monochrome-1;
  //   border-color: $colors-main;

  //   &:disabled {
  //     background: $colors-monochrome-7;
  //     border-color: $colors-monochrome-7;
  //   }
  // }
}

// Specificity trick to avoid !important hell
.black.black {
  @include colors-black;

  &.ghost {
    @include colors-black-ghost;
  }
}

.light-blue {
  background: $colors-monochrome-1 !important;
  color: $colors-track-light-blue !important;
  --color-icon: #{$colors-track-light-blue};
  --theme-color: #{$colors-track-light-blue};

  &:hover {
    color: $colors-monochrome-1 !important;
    // For use by Button component (animates colors when hovering)
    --button-color-background: #{$colors-track-light-blue};
    --button-color-background-hover: #{darken($colors-track-light-blue, 15%)};
  }

  &.ghost {
    background: none !important;
    color: $colors-track-light-blue !important;
    --color-icon: #{$colors-track-light-blue} !important;
    border-color: $colors-track-light-blue !important;
  }

  &.inverted {
    background: $colors-monochrome-1 !important;
    color: $colors-track-light-blue !important;
    --color-icon: #{$colors-track-light-blue} !important;
  }
}

.blue {
  background: $colors-track-blue !important;
  color: $colors-monochrome-1 !important;
  --color-icon: #{$colors-monochrome-1} !important;
  border-color: $colors-track-blue !important;

  &.ghost {
    background: none !important;
    color: $colors-track-blue !important;
    --color-icon: #{$colors-track-blue} !important;
    border-color: $colors-track-blue !important;
  }

  &.inverted {
    background: $colors-monochrome-1 !important;
    color: $colors-track-blue !important;
    --color-icon: #{$colors-track-blue} !important;
  }
}

.red {
  background: $colors-track-red !important;
  color: $colors-monochrome-1 !important;
  --color-icon: #{$colors-monochrome-1} !important;
  border-color: $colors-track-red !important;

  &.ghost {
    background: none !important;
    color: $colors-track-red !important;
    --color-icon: #{$colors-track-red} !important;
    border-color: $colors-track-red !important;
  }

  &.inverted {
    background: $colors-monochrome-1 !important;
    color: $colors-track-red !important;
    --color-icon: #{$colors-track-red} !important;
  }

  &:disabled {
    background: $colors-ef-pink !important;
    color: $colors-track-red !important;
    --color-icon: #{$colors-track-red} !important;
    border: none;
  }
}
