// @forward 'partials/fonts';
// @forward 'partials/gaps';
// @forward 'partials/layout';
// @forward 'partials/grids';

// https://twitter.com/max_strebel/status/1051435009373016065
// Color goal: Have a list of specific colors, map them to primary/secondary/tertiary
/* 
  Color palette (basically just a dump of all colors sourced from Figma, easy to append to, can be fairly unstructured without issues)

  Idea is to never reference these colors directly - they're mapped to a purpose below, which can be referenced from the outside

  This way it's easy to add more colors, or to change them, without any side effects
*/
$color-success: #027357;
$color-success-light: #eefff2;
$color-error: #df320c;
$color-error-light: #feefef;
$color-warning: #c33e01;
$color-warning-light: #fffacc;
$color-info: #224490;
$color-info-light: #eef2fa;
$color-light: #323232;
$color-light-light: #ffffff;
$black-1: #30354b;
$black-2: #1b1d24;
$teal-1: #0daed0;
$yellow-1: #fbcd11;

/* PURPOSED COLORS - i.e. mappings of colors to a specific purpose */

// Neutral colors (borders, headers, etc.)
// $color-neutral-primary: $black-1;
// $color-neutral-secondary: $black-2;
// $color-neutral-tertiary: $black-3;

// States
$color-state-success: #027357;
$color-state-success-light: #eefff2;
$color-state-error: #df320c;
$color-state-error-light: #feefef;
$color-state-warning: #c33e01;
$color-state-warning-light: #fffacc;
$color-state-info: #224490;
$color-state-info-light: #eef2fa;
$color-state-light: #323232;
$color-state-light-light: #ffffff;

// Theme
$color-primary: $black-1;
$color-primary-light: $black-1;
$color-primary-dark: $black-1;
$color-primary-opaque: $black-1;
$color-secondary: $teal-1;
$color-secondary-light: $black-1;
$color-secondary-dark: $black-1;
$color-secondary-opaque: $black-1;
$color-tertiary: $yellow-1;
$color-tertiary-light: $black-1;
$color-tertiary-dark: $black-1;
$color-tertiary-opaque: $black-2;

// Fonts
$font-primary: 'Roboto', serif; // 'Montserrat', sans-serif;
$font-secondary: 'Roboto', serif;
$font-tertiary: 'Space Mono', monospace;

// Sizes relative to root font-size
$size-1: 0.125rem; // 2px (assuming root font-size is 16px)
$size-2: $size-1 * 2;
$size-3: $size-1 * 3;
$size-4: $size-1 * 4; // 0.5rem 8px
$size-5: $size-1 * 5;
$size-6: $size-1 * 6;
$size-7: $size-1 * 7;
$size-8: $size-1 * 8; // 1rem 16px
$size-9: $size-1 * 9;
$size-10: $size-1 * 10;
$size-11: $size-1 * 11;
$size-12: $size-1 * 12;
$size-13: $size-1 * 13;
$size-14: $size-1 * 14;
$size-15: $size-1 * 15;
$size-16: $size-1 * 16; // 2rem 32px;
$size-20: $size-1 * 20; // 2rem 40px;
$size-32: $size-1 * 32; // 4rem 64px;
$size-40: $size-1 * 40; // 5rem 80px;
$size-44: $size-1 * 44; // 5.5rem 88px;
$size-48: $size-1 * 48; // 6rem 96px;
$size-64: $size-1 * 64; // 8rem 128px;
$size-72: $size-1 * 72; // 9rem 144px;
$size-80: $size-1 * 80; // 10rem 160px;
$size-88: $size-1 * 88; // 11rem 176px;

$gap-1: 4px;
$gap-2: $gap-1 * 2; // 8px
$gap-3: $gap-1 * 3;
$gap-4: $gap-1 * 4; // 16px
$gap-5: $gap-1 * 5;
$gap-6: $gap-1 * 6;
$gap-7: $gap-1 * 7;
$gap-8: $gap-1 * 8; // 32px
$gap-10: $gap-1 * 10; // 40px
$gap-12: $gap-1 * 12; // 48px
$gap-16: $gap-1 * 16; // 64px

// Content boundary (borders, background images, etc. can extend this, but the "inner" content of sections should be bounded by this value)
$content-width: 1680px;

// Screens
$screen-tiny: 410px;
$screen-sm: 640px;
$screen-md: 768px;
$screen-lg: 1024px;
$screen-xl: 1280px;
$screen-xxl: 1536px;
